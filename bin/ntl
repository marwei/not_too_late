#!/usr/bin/env ruby

require 'optparse'
require File.join(File.dirname(__FILE__), "../lib/not_too_late")

time_travel = nil

opt_parser = OptionParser.new do |opt|  
  opt.banner = "Usage: ntl command [options]"
  opt.separator ""
  opt.separator "    init: initialize git repo and create configuration file"
  opt.separator "    config: configure time travel settings. [-sfbg]"
  opt.separator "    git command: run git command with current time travel settings"
  opt.separator ""
  opt.separator "Options:"

  opt.on "-s", "--set number_of_days", Numeric, "set how many days earlier the git actions will be made" do |arg|
    time_travel = arg
  end

  opt.on "-f", "--forward number_of_days", Numeric, "fast forward the current setting by specified number of days" do |arg|
    time_travel = NotTooLate::Command.get_time_travel - arg
  end

  opt.on "-b", "--backward number_of_days", Numeric, "roll backward the current setting by specified number of days" do |arg|
    time_travel = NotTooLate::Command.get_time_travel + arg
  end
  opt.on "-g", "--go date (mm-dd-yy)", "set or change current date setting to the specified date." do |arg|
    time_travel = (Date.today - Date.strptime(arg, '%m-%d-%y')).to_i
    if time_travel < 0
      puts opt_parser
      exit
    end
  end
  opt.on "-h", "--help", "help" do
    puts opt_parser
  end
end

# FIXME: this is a workaround to avoid git commands' flags being parsed here
#        e.g. ntl git commit -am "initial commit" will exit with error if the
#        following code was put after the opt_parser.parse!
if ARGV[0] == "git"
  time_travel = NotTooLate::Command.get_time_travel
  git_command = ' '
  ARGV.each do |arg|
    if arg.split.size > 1
      git_command += "'#{arg}' "
    else
      git_command += "#{arg} "
    end
  end
  system git_command

  # NotTooLate.run time_travel, git_command
  exit
end

opt_parser.parse!

case ARGV[0]
when "init"
  NotTooLate::Command.init_config
when "config"
  if time_travel.nil?
    puts "Invalid option"
  else
    NotTooLate::Command.set_time_travel time_travel
  end
else
  puts opt_parser
end